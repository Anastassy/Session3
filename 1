#include <iostream>
#include <string>

using namespace std;

class TrivialDictionary {
    string *dictionary;
    int Size;
    bool binarySearch(const string word, int l, int r) {
        if (l > r) return false;
        int idx = (l+r)/2;
        if (word.compare(wordAt(idx)) == 0) {
                return true;
        }
        if (word.compare(wordAt(idx)) > 0) {
            return binarySearch(word, idx+1, r);
        } else {
            return binarySearch(word, l, idx-1);
        }
    }
public:
    TrivialDictionary(int n=0, string *str=0): Size(n) {
        dictionary = new string[Size];
        for (int i=0; i<n; i++) {
            dictionary[i] = str[i];
        }
    }
    string wordAt(int idx) {
        return dictionary[idx];
    }
    bool isInDictionary(const string word) {
        return binarySearch(word, 0, Size-1);
    }
};



int main(){
    string t[]= {"a", "b", "c", "d", "e", "f", "g", "h"};
    TrivialDictionary test(8, t);
    cout << "a: " << test.isInDictionary("a") << endl;
    cout << "b: " << test.isInDictionary("b") << endl;
    cout << "c: " << test.isInDictionary("c") << endl;
    cout << "d: " << test.isInDictionary("d") << endl;
    cout << "e: " << test.isInDictionary("e") << endl;
    cout << "f: " << test.isInDictionary("f") << endl;
    cout << "g: " << test.isInDictionary("g") << endl;
    cout << "h: " << test.isInDictionary("h") << endl;
    cout << "i: " << test.isInDictionary("i") << endl;
    cout << ": " << test.isInDictionary("") << endl;
    return 0;
}
